{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"sQAqBeA,cAAQ,MANI,SAACC,GAC1B,MAAM,CACJC,QAAS,kBAAMD,GCAX,SAACA,EAAUE,EAAX,IACaC,EAD0B,EAAjBA,eAGjBC,OAAOH,UAAUI,MAAK,WAC7BL,EAAS,CAAEM,KAAM,8BDARP,EAhBO,SAACQ,GACrB,OACE,wBAAIC,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,oBAAoBD,EAAMI,QAAQC,eEGvDC,EATQ,WACrB,OACE,wBAAIL,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCoBKV,eARS,SAACe,GAEvB,OADAC,QAAQC,IAAIF,GACL,CACLV,KAAMU,EAAMG,SAASb,KACrBO,QAASG,EAAMG,SAASN,WAIbZ,EAtBA,SAACQ,GAAU,IAChBH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QAERO,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAa,kBAAC,EAAD,MAC9D,OACE,yBAAKH,UAAU,eACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,iBACEU,O,iBCcKE,EA1BO,SAACb,GAAU,IACxBc,EAAiBd,EAAjBc,cACP,OACE,yBAAKb,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACE,wBAAIA,UAAU,iBACZa,GAAiBA,EAAcC,KAAI,SAAAC,GACnC,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMjB,UAAU,YAAYe,EAAKG,KAAjC,KACA,8BAAOH,EAAKI,SACZ,yBAAKnB,UAAU,uBACZoB,IAAOL,EAAKM,KAAKC,UAAUC,oBCDjCC,EAZQ,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACvB,OACE,yBAAKzB,UAAU,wBACb,yBAAKA,UAAU,mCACb,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAG5B,UAAU,aAAaoB,IAAOK,EAAQI,UAAUP,UAAUQ,eCUtDC,EAfK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,yBAAKhC,UAAU,wBACXgC,GAAYA,EAASlB,KAAI,SAAAW,GACzB,OACE,kBAAC,IAAD,CAAMxB,GAAI,YAAcwB,EAAQR,IAChC,kBAAC,EAAD,CAAgBQ,QAASA,EAAST,IAAKS,EAAQR,W,gBCFnDgB,E,uKACG,IAAD,EACoCC,KAAKnC,MAAvCiC,EADF,EACEA,SAAUpC,EADZ,EACYA,KAAMiB,EADlB,EACkBA,cACxB,OAAIjB,EAAKe,IAGP,yBAAKX,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAagC,SAAUA,KAEzB,yBAAKhC,UAAU,wBACb,kBAAC,EAAD,CAAea,cAAeA,OATjB,kBAAC,IAAD,CAAUZ,GAAG,gB,GAHZkC,aA8BTC,cACb7C,aAXsB,SAACe,GAEvB,MAAM,CACJ0B,SAAU1B,EAAM+B,UAAUC,QAAQN,SAClCpC,KAAMU,EAAMG,SAASb,KACrBiB,cAAeP,EAAM+B,UAAUC,QAAQzB,kBAOvC0B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJjDL,CAOTH,GCESG,cACb7C,aAZsB,SAACe,EAAOqC,GAE9B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAW1B,EAAM+B,UAAUS,KAAKd,SAEtC,MAAM,CACJP,QAFcO,EAAWA,EAASf,GAAM,KAGxCrB,KAAMU,EAAMG,SAASb,SAMvB2C,2BAAiB,CACf,CAACC,WAAY,cAHFJ,EAxCQ,SAACrC,GAAW,IACzB0B,EAAkB1B,EAAlB0B,QACR,OAD0B1B,EAATH,KACRe,IAELc,EAEF,yBAAKzB,UAAU,qCACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAeyB,EAAQC,OACrC,2BAAKD,EAAQN,UAEf,yBAAKnB,UAAU,eACb,0CAAiByB,EAAQE,gBAAzB,IAA4CF,EAAQG,eAApD,KACA,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAO/C,yBAAK9B,UAAU,oBACb,kDApBe,kBAAC,IAAD,CAAUC,GAAG,e,QCJ9B8C,E,4MACJzC,MAAQ,CACN0C,MAAO,GACPC,SAAU,I,EAGdC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKzD,MAAM0D,OAAO,EAAKnD,Q,uDAGb,IAAD,EACqB4B,KAAKnC,MAAzB2D,EADD,EACCA,UACR,OAFO,EACY9D,KACXe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAG/B,yBAAKD,UAAU,aACb,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,SAAnD,UACA,2BAAO9D,KAAK,QAAQmB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKlD,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,YAAnD,cACA,2BAAO9D,KAAK,WAAWmB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEtD,yBAAKlD,UAAU,eACb,4BAAQA,UAAU,OAAlB,SACA,yBAAKA,UAAU,sBACZ0D,EAAY,2BAAIA,GAAiB,a,GApC3BvB,aA0DN5C,eAbS,SAACe,GACvB,MAAM,CACJoD,UAAWpD,EAAMV,KAAK8D,UACtB9D,KAAMU,EAAMG,SAASb,SAIE,SAACJ,GAC1B,MAAM,CACJiE,OAAQ,SAACK,GAAD,OAAWtE,GR3DAuE,EQ2DgBD,ER1D/B,SAACtE,EAAUE,EAAX,IACaC,EAD0B,EAAjBA,eAGjBC,OAAOoE,2BACdD,EAAYf,MACZe,EAAYd,UACZpD,MAAK,WACLL,EAAS,CAAEM,KAAM,qBAChBmE,OAAM,SAACC,GACR1E,EAAS,CAAEM,KAAM,cAAeoE,cAVhB,IAACH,MQ+DRxE,CAA6CwD,GC1DtDoB,E,4MACJ7D,MAAQ,CACN0C,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGdnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKzD,MAAMuE,OAAO,EAAKhE,Q,uDAGb,IAAD,EACqB4B,KAAKnC,MAAzBH,EADD,EACCA,KAAM8D,EADP,EACOA,UACd,OAAG9D,EAAKe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAG/B,yBAAKD,UAAU,aACb,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,aAAnD,YACA,2BAAO9D,KAAK,OAAOmB,GAAG,YAAY4C,SAAU3B,KAAKgB,gBAEnD,yBAAKlD,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,YAAnD,cACA,2BAAO9D,KAAK,OAAOmB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAElD,yBAAKlD,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,SAAnD,UACA,2BAAO9D,KAAK,QAAQmB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKlD,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,YAAnD,cACA,2BAAO9D,KAAK,WAAWmB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEtD,yBAAKlD,UAAU,eACb,4BAAQA,UAAU,OAAlB,UACA,yBAAKA,UAAU,sBACX0D,EAAY,2BAAKA,GAAkB,a,GA9C9BvB,aAoEN5C,eAbS,SAACe,GACvB,MAAM,CACJV,KAAMU,EAAMG,SAASb,KACrB8D,UAAWpD,EAAMV,KAAK8D,cAIC,SAAClE,GAC1B,MAAM,CACJ8E,OAAQ,SAACC,GAAD,OAAa/E,ET1CH,SAAC+E,GACrB,OAAM,SAAC/E,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAa6E,EAAkB,EAAlBA,aACjC/D,EAAWd,IACX0C,EAAYmC,IAElB/D,EAASb,OAAO6E,+BACdF,EAAQvB,MACRuB,EAAQtB,UACRpD,MAAK,SAAC6E,GACN,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAKxD,KAAKP,KAAKiE,IAAI,CAC1DR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBjE,SAAUmE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEnDxE,MAAK,WACNL,EAAS,CAAEM,KAAM,sBAChBmE,OAAM,SAAAC,GACP1E,EAAS,CAAEM,KAAM,eAAgBoE,YSyBLI,CAAOC,QAI1BhF,CAA6C4E,G,QCpEtDU,E,4MACJvE,MAAQ,CACNoB,MAAO,GACPP,QAAS,I,EAGb+B,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKzD,MAAM+E,cAAc,EAAKxE,OAC9B,EAAKP,MAAMgF,QAAQC,KAAK,M,uDAKtB,OADiB9C,KAAKnC,MAAdH,KACCe,IAEP,yBAAKX,UAAU,aACb,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,oBACA,yBAAKA,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,SAAnD,SACA,2BAAO9D,KAAK,OAAOmB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAE/C,yBAAKlD,UAAU,eACb,2BAAOA,UAAU,0BAA0B4D,QAAQ,WAAnD,mBACA,8BAAU3C,GAAG,UAAUjB,UAAU,uBAAuB6D,SAAU3B,KAAKgB,gBAEzE,yBAAKlD,UAAU,eACb,4BAAQA,UAAU,OAAlB,aAda,kBAAC,IAAD,CAAUC,GAAG,gB,GArBVkC,aAuDb5C,eAZS,SAACe,GACvB,MAAM,CACJV,KAAMU,EAAMG,SAASb,SAIE,SAACJ,GAC1B,MAAM,CACJsF,cAAe,SAACrD,GAAD,OAAajC,ECrCH,SAACiC,GAC5B,OAAO,SAACjC,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IAErD0C,GAAYmC,EAFwC,EAAlBA,gBAGlCrE,EAAUT,IAAWe,SAASN,QAC9B8E,EAAWvF,IAAWe,SAASb,KAAKe,IAC1C0B,EAAUG,WAAW,YAAY0C,IAAjC,2BACKzD,GADL,IAEEE,gBAAiBxB,EAAQiE,UACzBxC,eAAgBzB,EAAQkE,SACxBY,SAAUA,EACVpD,UAAW,IAAIsD,QACdtF,MAAK,WACFL,EAAS,CAAEM,KAAM,iBAAkB2B,eACtCwC,OAAM,SAACC,GACR1E,EAAS,CAAEM,KAAM,uBAAwBoE,YDsBNY,CAAcrD,QAIxClC,CAA6CsF,GE/B7CO,E,uKAjBX,OACE,kBAAC,IAAD,KACA,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,IAAIC,UAAYtD,IAClC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAYC,IACvC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAYxC,IAClC,kBAAC,IAAD,CAAOuC,KAAK,UAAUC,UAAYpB,IAClC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,UAAYV,W,GAX5B1C,aCEEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShD,MACvB,2DClBN,IAAMiD,EAAW,CACfnC,UAAW,MAqCEoC,EAlCK,WAAgC,IAA/BxF,EAA8B,uDAAtBuF,EAAWE,EAAW,uCACjD,OAAOA,EAAOjG,MACZ,IAAK,cAEH,OADAS,QAAQC,IAAI,eACL,2BACFF,GADL,IAEEoD,UAAW,iBAEb,IAAK,gBAEH,OADAnD,QAAQC,IAAI,gBACZ,2BACKF,GADL,IAEEoD,UAAW,OAEf,IAAK,kBAEH,OADAnD,QAAQC,IAAI,kBACLF,EACT,QACA,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACZ,2BACKF,GADL,IAEEoD,UAAW,OAEf,IAAK,eAEH,OADAnD,QAAQC,IAAI,gBACZ,2BACKF,GADL,IAEEoD,UAAWqC,EAAO7B,IAAI8B,YChC1BH,EAAY,CAChB7D,SAAU,CACR,CAACf,GAAI,IAAKS,MAAO,qBAAsBP,QAAS,kBAChD,CAACF,GAAI,IAAKS,MAAO,wBAAyBP,QAAS,kBACnD,CAACF,GAAI,IAAKS,MAAO,sBAAuBP,QAAS,oBAiBtC8E,EAbQ,WAAgC,IAA/B3F,EAA8B,uDAAtBuF,EAAWE,EAAW,uCACpD,OAAOA,EAAOjG,MACZ,IAAK,iBAEH,OADAS,QAAQC,IAAI,kBAAmBuF,EAAOtE,SAC/BnB,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,uBAAwBuF,EAAO7B,KACpC5D,EACT,QACE,OAAOA,I,QCJE4F,EAPKC,YAAgB,CAClCvG,KAAMkG,EACNrE,QAASwE,EACT5D,UAAW+D,mBACX3F,SAAU4F,oB,wCCOX5F,IAAS6F,cAXW,CAClBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMHrG,QAAf,ECHMsG,EAAQC,YAAYd,EACtB9D,YACI6E,YAAgBC,IAAMC,kBAAkB,CAAExH,0BAAa6E,+BACvD4C,yBAAeC,KAUjBC,EAAW,CACb7G,aACA8G,OAPc,CACdC,YAAa,QACbC,wBAAwB,GAMxBjI,SAAUuH,EAAMvH,SAChBkI,mDAGJ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBhI,EAAOiI,aAAY,SAAAvH,GAAK,OAAIA,EAAMG,SAASb,QACjD,OAAKkI,mBAASlI,GACHgI,EADiB,kDAK9BG,IAASC,OACL,kBAAC,IAAD,CAAUjB,MAAOA,GACb,kBAAC,6BAA+BO,EAC9B,kBAACK,EAAD,SAAe,kBAAC,EAAD,SAGrBM,SAASC,eAAe,SLiFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxI,MAAK,SAAAyI,GACJA,EAAaC,gBAEdtE,OAAM,SAAAuE,GACLjI,QAAQiI,MAAMA,EAAMxC,c","file":"static/js/main.9a842688.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect  } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n  return(\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to='/' className='btn btn-floating'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) =>{\r\n  return(dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err})\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () =>{\r\n  return(dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return(dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS'})\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err })\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignedOutLinks = () =>{\r\n  return(\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Signup</NavLink></li>\r\n      <li><NavLink to='/signin'>Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n  return(\r\n    <nav className=\"nav-wrapper\" >\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">EnoRm Connect</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) =>{\r\n  const {notifications} = props;\r\n  return(\r\n    <div className=\"section\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n            { notifications && notifications.map(item => {\r\n              return(\r\n                <li key={item.id}>\r\n                  <span className=\"red-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n  return(\r\n    <div className=\"card project-summary\">\r\n      <div className=\"card-content grey-text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return(\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project =>{\r\n        return(\r\n          <Link to={'/project/' + project.id}>\r\n          <ProjectSummary project={project} key={project.id}/>\r\n          </Link>\r\n        )\r\n      })\r\n     }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\nrender(){\r\n  const { projects, auth, notifications } = this.props;\r\n  if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n  return(\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects}/>\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications}/>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  )\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  //console.log(state);\r\n  return{\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n      {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n\r\n    )(Dashboard)\r\n\r\n// export default compose(\r\n//     firestoreConnect(() => [{'projects'}, {'notifications'} ]),\r\n//     connect(mapStateToProps)\r\n//     )(Dashboard)\r\n\r\n\r\n\r\n\r\n// export default compose(\r\n//   connect(mapStateToProps),\r\n//   firestoreConnect([\r\n//     { collection: 'projects' }\r\n//   ])\r\n// )(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n  if (project){\r\n    return(\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n        </div>\r\n          <div className=\"card-action\">\r\n            <div>Posted by { project.authorFirstName} { project.authorLastName } </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  } else{\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  //console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return{\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects' }\r\n  ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\nhandleChange = (e) =>{\r\n  this.setState({\r\n    [e.target.id]: e.target.value\r\n  })\r\n}\r\n\r\nhandleSubmit = (e) =>{\r\n  e.preventDefault();\r\n  this.props.signIn(this.state);\r\n}\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-4\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"email\">E-mail</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"password\">Wachtwoord</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn\">Login</button>\r\n            <div className=\"orange-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\nhandleChange = (e) =>{\r\n  this.setState({\r\n    [e.target.id]: e.target.value\r\n  })\r\n}\r\n\r\nhandleSubmit = (e) =>{\r\n  e.preventDefault();\r\n  this.props.signUp(this.state)\r\n}\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-4\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"firstName\">Voornaam</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"lastName\">Achternaam</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"email\">E-mail</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"password\">Wachtwoord</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn\">Signup</button>\r\n            <div className=\"orange-text center\">\r\n              { authError ? <p>{ authError }</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\nhandleChange = (e) =>{\r\n  this.setState({\r\n    [e.target.id]: e.target.value\r\n  })\r\n}\r\n\r\nhandleSubmit = (e) =>{\r\n  e.preventDefault();\r\n  // console.log(this.state);\r\n  this.props.createProject(this.state)\r\n  this.props.history.push('/');\r\n}\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-4\">Create a project</h5>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\"grey-text text-darken-1\" htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","// export const createProject = (project) => {\r\n//   return (dispatch, getState, {getFirestore}) => {\r\n//     const firestore = getFirestore();\r\n//     const profile = getState().firebase.profile;\r\n//     const authorId = getState().firebase.auth.uid;\r\n//     firestore.collection('projects').add({\r\n//       ...project,\r\n//       authorFirstName: profile.firstName,\r\n//       authorLastName: profile.lastName,\r\n//       authorId: authorId,\r\n//       createdAt: new Date()\r\n//     }).then(() => {\r\n//       dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n//     }).catch(err => {\r\n//       dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n//     });\r\n//   }\r\n// };\r\n\r\nexport const createProject = (project) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    //make a synccall to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n          dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    })\r\n\r\n  }\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\n// import './App.css';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n          <Switch>\n            <Route exact path='/' component= {Dashboard}/>\n            <Route path='/project/:id' component= {ProjectDetails}/>\n            <Route path='/signin' component= {SignIn}/>\n            <Route path='/signup' component= {SignUp}/>\n            <Route path='/create' component= {CreateProject}/>\n          </Switch>\n      </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState ={\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error')\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login succes')\r\n        return{\r\n          ...state,\r\n          authError: null\r\n      }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout succes')\r\n        return state;\r\n      default:\r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return{\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return{\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer\r\n","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n//Initialize Firebase\r\nvar firebaseConfig = {\r\n   apiKey: \"AIzaSyAjkgzz2YPM9PMe9OtSvk7TDhSVBHSEoag\",\r\n   authDomain: \"webinarapp-8c36b.firebaseapp.com\",\r\n   databaseURL: \"https://webinarapp-8c36b.firebaseio.com\",\r\n   projectId: \"webinarapp-8c36b\",\r\n   storageBucket: \"webinarapp-8c36b.appspot.com\",\r\n   messagingSenderId: \"963364391218\",\r\n   appId: \"1:963364391218:web:a98c9573a63b9a32e5ef2b\",\r\n   measurementId: \"G-RFTE66PPDD\"\r\n };\r\n // Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n //firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\n\n\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase,  isLoaded } from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport fbconfig from './config/fbconfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbconfig)\n    )\n);\n\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    // attachAuthIsReady: true\n  }\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n          <AuthIsLoaded> <App /></AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n\n\n\n//versie 1\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import { createStore, applyMiddleware, compose } from 'redux'\n// import rootReducer from './store/reducers/rootReducer'\n// import { Provider } from 'react-redux'\n// import thunk from 'redux-thunk'\n// import { reduxFirestore, getFirestore } from 'redux-firestore'\n// import { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\n// import fbconfig from './config/fbconfig'\n// import firebase from 'firebase/app'\n//\n// const store = createStore(rootReducer,\n//   compose(\n//    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n//    reduxFirestore(firebase, fbconfig),\n//    // reactReduxFirebase(firebase, fbconfig)\n//   )\n// );\n//\n// ReactDOM.render(\n//   <React.StrictMode>\n//   <Provider store={store}>\n//     <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}